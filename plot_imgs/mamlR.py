import numpy as np
import matplotlib.pyplot as plt

# Given data for the four FJSP problems and four models
data = {'10x5EC+ECMK': [np.array([-4.81438487, -4.81438487, -4.81438487, -4.81438487, -4.81438487]), 
[-6.934126430710807, -4.921160061994528, -4.861220781521545, -4.873497949771568, -4.805513751081617], 
[-6.934126430710807, -5.10744322873755, -5.616140700798299, -5.309308675776508, -5.488833766000879], 
[-6.934126430710807, -6.788258416529996, -7.010651951853144, -6.868175322232039, -6.59947250784217]], 
'20x5EC+ECMK': [np.array([-7.75463034, -7.75463034, -7.75463034, -7.75463034, -7.75463034]), 
                [-12.696068544655637, -7.5553591518222465, -7.6102191730659765, -7.580408239649744, -7.501066194868249], 
                [-12.696068544655637, -9.870667054018908, -10.356105301724336, -9.877472499609379, -9.943486698494933], 
                [-12.696068544655637, -12.14421089368023, -12.624118873132463, -12.52273172816164, -12.880945141821252]], 
'15x10EC+ECMK': [np.array([-8.78209681, -8.78209681, -8.78209681, -8.78209681, -8.78209681]), 
                 [-13.89444169121983, -9.100869346927318, -9.334189557340949, -8.912196530877713, -9.215201259680061], 
                 [-13.89444169121983, -11.79388625669323, -11.677382274114187, -11.151564361445349, -10.920303896880261], 
                 [-13.89444169121983, -13.3856757146638, -13.152947645921142, -13.5064665400777, -13.678472015820905]], 
'20x10EC+ECMK': [np.array([-8.77207095, -8.77207095, -8.77207095, -8.77207095, -8.77207095]), 
                   [-18.066080879568897, -9.16269082706809, -8.917548602646635, -8.896978898583637, -8.791094788587364], 
                 [-18.066080879568897, -15.77129870940891, -15.86082493918856, -15.106162395715344, -15.158389221527665],
                   [-18.066080879568897, -17.59773936449146, -17.681123855237256, -17.40598288696681, -17.11584365682892]]}

# Model names
model_names = ["DAN_baseline", "MAML", "pre_training", "random"]

# Setup the figure and axes
fig, axes = plt.subplots(2, 2, figsize=(12, 10))
axes = axes.flatten()

# Epochs for the x-axis
epochs = [1, 2, 3, 4, 5]

# Iterate through each FJSP problem and plot the data
for idx, (problem, results) in enumerate(data.items()):
    letter = chr(ord('a') + idx)
    for i, result in enumerate(results):
        axes[idx].plot(epochs, result, label=model_names[i], linewidth=0.8, marker='o', markersize=4,)
    axes[idx].set_title(f'{letter} ({problem})')
    axes[idx].set_xlabel('Finetuning Epoch', fontsize=14)
    axes[idx].set_ylabel('Reward', fontsize=14)
    axes[idx].legend()

# Layout adjustment
plt.tight_layout()

# Save the figure
plt.savefig('./fjsp_reward_plot.png')

plt.show()
